# Configuración del sitio Bingo La Perla
# Template que será personalizado durante el deployment

# Upstream para el backend (API + WebSocket)
upstream backend_servers {
    # Configuración de balanceador de carga
    least_conn;
    
    # Servidores backend (ajustar según la infraestructura)
    server 127.0.0.1:3001 max_fails=3 fail_timeout=30s;
    # server 127.0.0.1:3002 max_fails=3 fail_timeout=30s; # Para escalabilidad
    
    # Health check
    keepalive 32;
}

# Upstream para el frontend
upstream frontend_servers {
    server 127.0.0.1:3000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# Cache zones
proxy_cache_path /var/cache/nginx/bingo levels=1:2 keys_zone=bingo_cache:10m max_size=100m inactive=60m use_temp_path=off;

# Redirección HTTP a HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name DOMAIN_PLACEHOLDER www.DOMAIN_PLACEHOLDER;
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/html;
        allow all;
    }
    
    # Redireccionar todo el resto a HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Configuración HTTPS principal
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name DOMAIN_PLACEHOLDER www.DOMAIN_PLACEHOLDER;
    
    # Certificados SSL (configurados por Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/chain.pem;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # CSP personalizado para la aplicación
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' wss: ws:; media-src 'self'; object-src 'none'; frame-ancestors 'none';" always;
    
    # Configuración de logs específica para el sitio
    access_log /var/log/nginx/bingo-access.log main;
    error_log /var/log/nginx/bingo-error.log warn;
    
    # Configuración para WebSocket y Socket.IO
    location /socket.io/ {
        proxy_pass http://backend_servers;
        proxy_http_version 1.1;
        
        # Headers para WebSocket
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # Timeouts para WebSocket
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 86400;
        
        # Buffering off para tiempo real
        proxy_buffering off;
        proxy_request_buffering off;
        
        # Rate limiting específico para WebSocket
        limit_req zone=api burst=20 nodelay;
    }
    
    # API Backend
    location /api/ {
        proxy_pass http://backend_servers;
        proxy_http_version 1.1;
        
        # Headers estándar
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # Timeouts para API
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Rate limiting para API
        limit_req zone=api burst=10 nodelay;
        
        # Cache para ciertos endpoints
        location ~ ^/api/(games|users|stats)$ {
            proxy_pass http://backend_servers;
            proxy_cache bingo_cache;
            proxy_cache_valid 200 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            add_header X-Cache-Status $upstream_cache_status;
        }
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://backend_servers/health;
        access_log off;
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # Auth endpoints con rate limiting estricto
    location ~ ^/api/(auth|login|register)/ {
        proxy_pass http://backend_servers;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Rate limiting estricto para auth
        limit_req zone=login burst=3 nodelay;
        
        # No cache para endpoints de autenticación
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    # Frontend - React App
    location / {
        proxy_pass http://frontend_servers;
        proxy_http_version 1.1;
        
        # Headers para proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache headers para SPA
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend_servers;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            
            # Compression headers
            gzip_static on;
        }
        
        # Fallback para React Router
        try_files $uri $uri/ @fallback;
        
        # Rate limiting general
        limit_req zone=general burst=50 nodelay;
    }
    
    # Fallback para React Router
    location @fallback {
        proxy_pass http://frontend_servers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # PWA Manifest y Service Worker
    location ~* \.(webmanifest|sw\.js)$ {
        proxy_pass http://frontend_servers;
        expires epoch;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }
    
    # Bloquear acceso a archivos sensibles
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(env|log|config)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Robots.txt personalizado
    location = /robots.txt {
        proxy_pass http://frontend_servers;
        expires 1d;
    }
    
    # Sitemap
    location = /sitemap.xml {
        proxy_pass http://frontend_servers;
        expires 1d;
    }
    
    # Favicon
    location = /favicon.ico {
        proxy_pass http://frontend_servers;
        expires 1y;
        access_log off;
    }
    
    # Error pages personalizadas
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /var/www/html;
        internal;
    }
    
    error_page 404 /404.html;
    location = /404.html {
        proxy_pass http://frontend_servers;
        internal;
    }
}