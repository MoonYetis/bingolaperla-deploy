import { Router } from 'express';
import { GameController } from '@/controllers/gameController';
import { authenticate, requireAdmin } from '@/middleware/auth';
import { validateRequest } from '@/middleware/validation';
import {
  createGameSchema,
  getGamesSchema,
  gameParamsSchema,
  joinGameSchema,
} from '@/schemas/gameSchemas';

const router = Router();

// GET /api/games - Obtener todos los juegos
router.get('/', /* validateRequest(getGamesSchema), */ GameController.getAllGames);

// GET /api/games/:gameId - Obtener juego espec√≠fico
router.get('/:gameId', /* validateRequest(gameParamsSchema), */ GameController.getGameById);

// POST /api/games - Crear nuevo juego (solo admin)
router.post(
  '/',
  authenticate,
  requireAdmin,
  /* validateRequest(createGameSchema), */
  GameController.createGame
);

// POST /api/games/:gameId/join - Unirse a un juego
router.post(
  '/:gameId/join',
  authenticate,
  /* validateRequest(joinGameSchema), */
  GameController.joinGame
);

// POST /api/games/:gameId/start - Iniciar juego (solo admin)
router.post(
  '/:gameId/start',
  authenticate,
  requireAdmin,
  /* validateRequest(gameParamsSchema), */
  GameController.startGame
);

// POST /api/games/:gameId/draw-ball - Sortear bola (solo admin)
router.post(
  '/:gameId/draw-ball',
  authenticate,
  requireAdmin,
  /* validateRequest(gameParamsSchema), */
  GameController.drawBall
);

// POST /api/games/:gameId/end - Finalizar juego (solo admin)
router.post(
  '/:gameId/end',
  authenticate,
  requireAdmin,
  /* validateRequest(gameParamsSchema), */
  GameController.endGame
);

export default router;